


ARM Macro Assembler    Page 1 


    1 00000000         ; Luke Soldano, Xavier Agostini (C) 2016
    2 00000000         ; McGill University, ECSE 426, Lab One
    3 00000000         ; Assembly code to implemenet a Kalmann filter
    4 00000000         
    5 00000000                 AREA             fn, CODE, READONLY
    6 00000000                 IMPORT           Kalmanfilter_asm
    7 00000000                 IMPORT           dummyArray
    8 00000000                 EXPORT           testBench_asm
    9 00000000         testBench_asm
   10 00000000         
   11 00000000         ; Push return link onto stack
   12 00000000 B500            PUSH             {R14}
   13 00000002         
   14 00000002         ; Initialize q,r,x,p,k (Pointer to Kalman Struct)
   15 00000002 ED9F 2A08       VLDR.f32         S4, =0.0    ; float q
   16 00000006 EDDF 2A08       VLDR.f32         S5, =0.1    ; float r 
   17 0000000A ED9F 3A06       VLDR.f32         S6, =0.0    ; float x
   18 0000000E EDDF 3A06       VLDR.f32         S7, =0.1    ; float p
   19 00000012 ED9F 4A04       VLDR.f32         S8, =0.0    ; float k
   20 00000016 4B05            LDR              R3, =dummyArray ;load address o
                                                            f dummy matrix arra
                                                            y
   21 00000018 EC83 2A05       VSTM             R3, {S4-S8} ; R3 acts as a poin
                                                            ter to the struct 
   22 0000001C         
   23 0000001C         ; TODO: Need to pass in the following parameters to the 
                       kalman filter
   24 0000001C         
   25 0000001C         ; 1: Pointer to input data array
   26 0000001C         
   27 0000001C         ; 2: Pointer to filtered data array
   28 0000001C         ; 3: Array length
   29 0000001C         ; Run kalman filter
   30 0000001C 4804            LDR              R0, =Kalmanfilter_asm
   31 0000001E 4780            BLX              R0
   32 00000020         
   33 00000020         ; Pop return link off of stack
   34 00000020 F85D EB04       POP              {R14}
   35 00000024         
                       
              00000000 
              3DCCCCCD 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\testbench_asm.d -o.\objects\testbench_asm.o -IC:\Proj
ect\Project\MP426_Lab1\Lab1_STM32F4Cube_Base_project\RTE -IC:\Keil_v5\ARM\PACK\
ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Dr
ivers\CMSIS\Device\ST\STM32F4xx\Include --predefine="__UVISION_VERSION SETA 515
" --predefine="_RTE_ SETA 1" --predefine="STM32F407xx SETA 1" --list=.\listings
\testbench_asm.lst testBench_asm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

fn 00000000

Symbol: fn
   Definitions
      At line 5 in file testBench_asm.s
   Uses
      None
Comment: fn unused
testBench_asm 00000000

Symbol: testBench_asm
   Definitions
      At line 9 in file testBench_asm.s
   Uses
      At line 8 in file testBench_asm.s
Comment: testBench_asm used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Kalmanfilter_asm 00000000

Symbol: Kalmanfilter_asm
   Definitions
      At line 6 in file testBench_asm.s
   Uses
      At line 30 in file testBench_asm.s
Comment: Kalmanfilter_asm used once
dummyArray 00000000

Symbol: dummyArray
   Definitions
      At line 7 in file testBench_asm.s
   Uses
      At line 20 in file testBench_asm.s
Comment: dummyArray used once
2 symbols
340 symbols in table
